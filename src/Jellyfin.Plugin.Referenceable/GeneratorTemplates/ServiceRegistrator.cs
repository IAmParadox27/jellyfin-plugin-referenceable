// <auto-generated />
using MediaBrowser.Controller;
using MediaBrowser.Controller.Plugins;
using Microsoft.Extensions.DependencyInjection;
using {{namespace}}.Generated;

namespace Jellyfin.Plugin.Referenceable.Services
{
    public abstract class PluginServiceRegistrator : IPluginServiceRegistrator
    {
        public PluginServiceRegistrator()
        {
            
        }
        
        public void RegisterServices(IServiceCollection serviceCollection, IServerApplicationHost applicationHost)
        {
            // This is likely going to be the wrong assembly so we need to call into the correct assembly first.
            if (ModuleInitializer.IsInReferenceableContext<PluginServiceRegistrator>())
            {
                ConfigureServices(serviceCollection, applicationHost);
            }
            else
            {
                dynamic registrator = ModuleInitializer.CreateReferenceableObject(GetType());

                registrator.RegisterServices(serviceCollection, applicationHost);
            }
        }
        
        public abstract void ConfigureServices(IServiceCollection serviceCollection, IServerApplicationHost applicationHost);
    }
}